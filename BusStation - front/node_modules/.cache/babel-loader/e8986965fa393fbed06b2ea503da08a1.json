{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\BusStation\\\\BusStation - front\\\\src\\\\components\\\\line\\\\AddLine.js\";\nimport React from 'react';\nimport Axios from '../../apis/Axios';\nimport { Button, Form } from 'react-bootstrap';\nimport getCompaniesAction from \"../../actions/GetCompanies\";\nimport { connect } from \"react-redux\";\n\nclass AddLine extends React.Component {\n  constructor(props) {\n    super(props);\n    let line = {\n      availableSeats: 0,\n      price: 0,\n      scheduled: \"\",\n      destination: \"\",\n      companyDTO: null\n    };\n    this.state = {\n      line: line,\n      companies: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCompanies();\n  }\n\n  getCompanies() {\n    Axios.get('/companies').then(res => {\n      // handle success\n      console.log(res);\n      this.setState({\n        companies: res.data\n      });\n    }).catch(error => {\n      // handle error\n      console.log(error);\n      alert('Unable to get companies');\n    });\n  }\n\n  onInputChange(e) {\n    let input = e.target;\n    let name = input.name;\n    let value = input.value;\n    let line = this.state.line;\n    line[name] = value;\n    this.setState({\n      line: line\n    });\n    console.log(this.state.line);\n  }\n\n  companySelectionChange(e) {\n    let companyId = e.target.value;\n    let company = this.props.companies.find(company => company.id == companyId);\n    console.log(company);\n    let line = this.state.line;\n    line.companyDTO = company;\n    this.setState({\n      line: line\n    });\n    console.log(this.state.line);\n  }\n\n  create(event) {\n    event.preventDefault();\n    let line = this.state.line;\n    let lineDTO = {\n      availableSeats: line.availableSeats,\n      price: line.price,\n      scheduled: line.scheduled,\n      destination: line.destination,\n      companyDTO: line.companyDTO\n    };\n    Axios.post('/lines', lineDTO).then(res => {\n      // handle success\n      console.log(res);\n      alert('Line was added successfully!');\n      this.props.history.push('/lines');\n    }).catch(error => {\n      // handle error\n      console.log(error);\n      alert('Line is not added!');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"lavailableSeats\",\n          children: \"Available Seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"lavailableSeats\",\n          type: \"number\",\n          name: \"availableSeats\",\n          onChange: e => this.onInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 133\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"lprice\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"lprice\",\n          type: \"number\",\n          name: \"price\",\n          onChange: e => this.onInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"lscheduled\",\n          children: \"Scheduled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"lscheduled\",\n          type: \"text\",\n          name: \"scheduled\",\n          onChange: e => this.onInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 121\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"ldestination\",\n          children: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"ldestination\",\n          type: \"text\",\n          name: \"destination\",\n          onChange: e => this.onInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 125\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"lcompanyDTO\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          id: \"lcompanyDTO\",\n          onChange: event => this.companySelectionChange(event),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), this.props.companies.map(company => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: company.id,\n              children: company.name\n            }, company.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary\",\n          onClick: event => {\n            this.create(event);\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  return {\n    companies: state.companies\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCompanies: getCompaniesAction\n})(AddLine);","map":{"version":3,"sources":["D:/BusStation/BusStation - front/src/components/line/AddLine.js"],"names":["React","Axios","Button","Form","getCompaniesAction","connect","AddLine","Component","constructor","props","line","availableSeats","price","scheduled","destination","companyDTO","state","companies","componentDidMount","getCompanies","get","then","res","console","log","setState","data","catch","error","alert","onInputChange","e","input","target","name","value","companySelectionChange","companyId","company","find","id","create","event","preventDefault","lineDTO","post","history","push","render","map","mapStateToProps","ownProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,QAAIC,IAAI,GAAG;AACPC,MAAAA,cAAc,EAAE,CADT;AAEPC,MAAAA,KAAK,EAAE,CAFA;AAGPC,MAAAA,SAAS,EAAE,EAHJ;AAIPC,MAAAA,WAAW,EAAE,EAJN;AAKPC,MAAAA,UAAU,EAAE;AALL,KAAX;AAQA,SAAKC,KAAL,GAAa;AAACN,MAAAA,IAAI,EAAEA,IAAP;AAAaO,MAAAA,SAAS,EAAE;AAAxB,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKT,KAAL,CAAWU,YAAX;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACXlB,IAAAA,KAAK,CAACmB,GAAN,CAAU,YAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKG,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAEK,GAAG,CAACI;AAAhB,OAAd;AACJ,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH,KAVL;AAWH;;AAGDC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACb,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAd;AAEA,QAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;AAEA,QAAIzB,IAAI,GAAG,KAAKM,KAAL,CAAWN,IAAtB;AACAA,IAAAA,IAAI,CAACwB,IAAD,CAAJ,GAAaC,KAAb;AAEA,SAAKV,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWN,IAAvB;AACH;;AAED0B,EAAAA,sBAAsB,CAACL,CAAD,EAAI;AAEtB,QAAIM,SAAS,GAAGN,CAAC,CAACE,MAAF,CAASE,KAAzB;AACA,QAAIG,OAAO,GAAG,KAAK7B,KAAL,CAAWQ,SAAX,CAAqBsB,IAArB,CAA2BD,OAAD,IAAaA,OAAO,CAACE,EAAR,IAAcH,SAArD,CAAd;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AAEA,QAAI5B,IAAI,GAAG,KAAKM,KAAL,CAAWN,IAAtB;AACAA,IAAAA,IAAI,CAACK,UAAL,GAAkBuB,OAAlB;AAEA,SAAKb,QAAL,CAAc;AAACf,MAAAA,IAAI,EAAEA;AAAP,KAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWN,IAAvB;AAEH;;AAED+B,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACVA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIjC,IAAI,GAAG,KAAKM,KAAL,CAAWN,IAAtB;AAEI,QAAIkC,OAAO,GAAG;AACVjC,MAAAA,cAAc,EAAED,IAAI,CAACC,cADX;AAEVC,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFF;AAGVC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SAHN;AAIVC,MAAAA,WAAW,EAAEJ,IAAI,CAACI,WAJR;AAKVC,MAAAA,UAAU,EAAEL,IAAI,CAACK;AALP,KAAd;AAQJd,IAAAA,KAAK,CAAC4C,IAAN,CAAW,QAAX,EAAqBD,OAArB,EACCvB,IADD,CACMC,GAAG,IAAI;AACT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAO,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACA,WAAKpB,KAAL,CAAWqC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,KAPD,EAQCpB,KARD,CAQOC,KAAK,IAAI;AACZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACF,KAZF;AAaH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eACsE;AAAA;AAAA;AAAA;AAAA,gBADtE,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,iBAAjB;AAAmC,UAAA,IAAI,EAAC,QAAxC;AAAiD,UAAA,IAAI,EAAC,gBAAtD;AAAuE,UAAA,QAAQ,EAAGjB,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAEoH;AAAA;AAAA;AAAA;AAAA,gBAFpH,eAGI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAGmD;AAAA;AAAA;AAAA;AAAA,gBAHnD,eAII,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,IAAI,EAAC,OAA7C;AAAqD,UAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAIkG;AAAA;AAAA;AAAA;AAAA,gBAJlG,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAK2D;AAAA;AAAA;AAAA;AAAA,gBAL3D,eAMI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,IAAI,EAAC,WAA/C;AAA2D,UAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB;AAA5E;AAAA;AAAA;AAAA;AAAA,gBANJ,eAMwG;AAAA;AAAA;AAAA;AAAA,gBANxG,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAO+D;AAAA;AAAA;AAAA;AAAA,gBAP/D,eAQI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,IAAI,EAAC,aAAjD;AAA+D,UAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKD,aAAL,CAAmBC,CAAnB;AAAhF;AAAA;AAAA;AAAA;AAAA,gBARJ,eAQ4G;AAAA;AAAA;AAAA;AAAA,gBAR5G,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,OAAO,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAU0D;AAAA;AAAA;AAAA;AAAA,gBAV1D,eAWI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAA0B,UAAA,EAAE,EAAC,aAA7B;AAA2C,UAAA,QAAQ,EAAEW,KAAK,IAAI,KAAKN,sBAAL,CAA4BM,KAA5B,CAA9D;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGQ,KAAKjC,KAAL,CAAWQ,SAAX,CAAqBgC,GAArB,CAA0BX,OAAD,IAAa;AAClC,gCACI;AAAyB,cAAA,KAAK,EAAEA,OAAO,CAACE,EAAxC;AAAA,wBACKF,OAAO,CAACJ;AADb,eAAaI,OAAO,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAND,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAsBmB;AAAA;AAAA;AAAA;AAAA,gBAtBnB,eAwBI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAGE,KAAD,IAAS;AAAC,iBAAKD,MAAL,CAAYC,KAAZ;AAAoB,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+BH;;AA1HiC;;AA4HtC,MAAMQ,eAAe,GAAG,CAAClC,KAAD,EAAQmC,QAAR,KAAqB;AACzC;AACA,SAAO;AAAElC,IAAAA,SAAS,EAAED,KAAK,CAACC;AAAnB,GAAP;AACD,CAHH;;AAKE,eAAeZ,OAAO,CAAC6C,eAAD,EAAkB;AACtC/B,EAAAA,YAAY,EAAEf;AADwB,CAAlB,CAAP,CAEZE,OAFY,CAAf","sourcesContent":["import React from 'react';\r\nimport Axios from '../../apis/Axios';\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport getCompaniesAction from \"../../actions/GetCompanies\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddLine extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let line = {\r\n            availableSeats: 0,\r\n            price: 0,\r\n            scheduled: \"\",\r\n            destination: \"\",\r\n            companyDTO: null\r\n        }\r\n\r\n        this.state = {line: line, companies: []};\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getCompanies();\r\n    }\r\n\r\n    getCompanies() {\r\n        Axios.get('/companies')\r\n            .then(res => {\r\n                 // handle success\r\n                 console.log(res);\r\n                 this.setState({companies: res.data});\r\n            })\r\n            .catch(error => {\r\n                // handle error\r\n                console.log(error);\r\n                alert('Unable to get companies');\r\n            });\r\n    }\r\n\r\n    \r\n    onInputChange(e) {\r\n        let input = e.target;\r\n    \r\n        let name = input.name;\r\n        let value = input.value;\r\n    \r\n        let line = this.state.line;\r\n        line[name] = value;\r\n    \r\n        this.setState({ line: line });\r\n        console.log(this.state.line)\r\n    }\r\n\r\n    companySelectionChange(e) {\r\n\r\n        let companyId = e.target.value;\r\n        let company = this.props.companies.find((company) => company.id == companyId);\r\n        console.log(company)\r\n\r\n        let line = this.state.line;\r\n        line.companyDTO = company;\r\n\r\n        this.setState({line: line});\r\n        console.log(this.state.line)\r\n\r\n    }\r\n\r\n    create(event) {\r\n        event.preventDefault();\r\n\r\n        let line = this.state.line;\r\n\r\n            let lineDTO = {\r\n                availableSeats: line.availableSeats,\r\n                price: line.price,\r\n                scheduled: line.scheduled,\r\n                destination: line.destination,\r\n                companyDTO: line.companyDTO\r\n            }\r\n\r\n        Axios.post('/lines', lineDTO)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n           \r\n            alert('Line was added successfully!');\r\n            this.props.history.push('/lines');\r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Line is not added!');\r\n         });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add line</h1>\r\n                <Form>\r\n                    <Form.Label htmlFor=\"lavailableSeats\">Available Seats</Form.Label><br/>\r\n                    <Form.Control id=\"lavailableSeats\" type=\"number\" name=\"availableSeats\" onChange={(e) => this.onInputChange(e)}/><br/>\r\n                    <Form.Label htmlFor=\"lprice\">Price</Form.Label><br/>\r\n                    <Form.Control id=\"lprice\" type=\"number\" name=\"price\" onChange={(e) => this.onInputChange(e)}/><br/>\r\n                    <Form.Label htmlFor=\"lscheduled\">Scheduled</Form.Label><br/>\r\n                    <Form.Control id=\"lscheduled\" type=\"text\" name=\"scheduled\" onChange={(e) => this.onInputChange(e)}/><br/>\r\n                    <Form.Label htmlFor=\"ldestination\">Destination</Form.Label><br/>\r\n                    <Form.Control id=\"ldestination\" type=\"text\" name=\"destination\" onChange={(e) => this.onInputChange(e)}/><br/>\r\n\r\n                    <Form.Label htmlFor=\"lcompanyDTO\">Company</Form.Label><br/>\r\n                    <Form.Control as=\"select\" id=\"lcompanyDTO\" onChange={event => this.companySelectionChange(event)}>\r\n                        <option></option>\r\n                        {\r\n                            this.props.companies.map((company) => {\r\n                                return (\r\n                                    <option key={company.id} value={company.id}>\r\n                                        {company.name}\r\n                                    </option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Form.Control><br/>\r\n                    \r\n                    <Button className=\"btn btn-primary\" onClick={(event)=>{this.create(event);}}>Add</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    return { companies: state.companies };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, {\r\n    getCompanies: getCompaniesAction,\r\n  })(AddLine);"]},"metadata":{},"sourceType":"module"}